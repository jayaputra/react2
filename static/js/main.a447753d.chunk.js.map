{"version":3,"sources":["components/Navbar.js","components/CityCard.js","components/FeaturedCities.js","components/ImageandWelcome.js","pages/Home.js","components/Footer.js","App.js","serviceWorker.js","index.js","assets/images/bg-masthead.jpg"],"names":["Navbar","class","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","CityCard","props","className","katipung","name","country_name","FeaturedCities","bayiasam","map","kotal","key","ImageandWelcome","src","mainImage","Home","Component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"8NA6BeA,EA3BA,kBACb,yBAAKC,MAAM,4DAA4DC,GAAG,WACxE,yBAAKD,MAAM,aACT,uBAAGA,MAAM,iCAAiCE,KAAK,aAA/C,mBACA,4BAAQF,MAAM,sCAAsCG,KAAK,SAASC,cAAY,WAC5EC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAC/EC,aAAW,qBAFb,OAIE,uBAAGR,MAAM,iBAEX,yBAAKA,MAAM,2BAA2BC,GAAG,oBACvC,wBAAID,MAAM,sBACR,wBAAIA,MAAM,YACR,uBAAGA,MAAM,6BAA6BE,KAAK,UAA3C,UAEF,wBAAIF,MAAM,YACR,uBAAGA,MAAM,6BAA6BE,KAAK,aAA3C,aAEF,wBAAIF,MAAM,YACR,uBAAGA,MAAM,6BAA6BE,KAAK,WAA3C,iBCPGO,EAZE,SAACC,GAAD,OACb,yBAAKC,UAAU,YACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcD,EAAME,SAASC,MAC3C,2BAAIH,EAAME,SAASE,cACnB,uBAAGZ,KAAK,IAAIS,UAAU,aAAtB,qBAAqDD,EAAME,SAASC,UCSrEE,EAdQ,SAACL,GAAD,OACnB,oCACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,UACb,iDAGN,yBAAKA,UAAU,OACTD,EAAMM,SAASC,KAAI,SAAAC,GAAK,OACxB,kBAAC,EAAD,CAAUC,IAAKD,EAAMjB,GAAIW,SAAUM,U,gBCYlCE,EApBS,kBACpB,oCACA,yBAAKT,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKU,IAAKC,IAAWX,UAAU,gBAGnC,4BAAQX,MAAM,YACV,yBAAKA,MAAM,6CACP,yBAAKA,MAAM,uBACP,wBAAIA,MAAM,+BAAV,aACA,wBAAIA,MAAM,kCAAV,4EAEA,uBAAGE,KAAK,SAASF,MAAM,qCAAvB,oBCODuB,E,iLAZP,OACI,oCACI,kBAAC,EAAD,MAEI,yBAAKZ,UAAU,wBACf,kBAAC,EAAD,CAAgBK,SAVR,CAChB,CAACf,GAAI,GAAIY,KAAM,UAAWC,aAAc,aACxC,CAACb,GAAI,MAAOY,KAAM,UAAWC,aAAc,aAC3C,CAACb,GAAI,IAAKY,KAAM,OAAQC,aAAc,sB,GAN/BU,aCMJC,EARA,kBACX,4BAAQzB,MAAM,gDACV,yBAAKA,MAAM,aAAX,yBCiBS0B,E,iLAXX,OACE,oCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,W,GATUF,aCMEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BC,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.a447753d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = () => (\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-primary fixed-top\" id=\"mainNav\">\n    <div class=\"container\">\n      <a class=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">Start Bootstrap</a>\n      <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\n        data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\">\n        Menu\n        <i class=\"fas fa-bars\"></i>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link js-scroll-trigger\" href=\"#about\">About</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link js-scroll-trigger\" href=\"#projects\">Projects</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link js-scroll-trigger\" href=\"#signup\">Contact</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Navbar;","import React from 'react';\n\nconst CityCard = (props) => (\n    <div className=\"col-md-4\">\n        <div className=\"card bg-light mb-3\">\n            <div className=\"card-body\">\n                <h3 className=\"card-title\">{props.katipung.name}</h3>\n                <p>{props.katipung.country_name}</p>\n                <a href=\"#\" className=\"card-text\">See restaurant in {props.katipung.name}</a>\n            </div>\n        </div>\n    </div>\n);\n\nexport default CityCard;","import React from 'react';\nimport CityCard from './CityCard';\n\nconst FeaturedCities = (props) => (\n    <>\n        <div className=\"row\">\n            <div className=\"col-12\">\n              <h3>Featured Cities</h3>\n            </div>\n        </div>\n        <div className=\"row\">\n            { props.bayiasam.map(kotal => (\n              <CityCard key={kotal.id} katipung={kotal} />\n            ))}\n        </div>\n    </>\n)\nexport default FeaturedCities;","import React from 'react';\nimport mainImage from '../assets/images/bg-masthead.jpg';\n\n\nconst ImageandWelcome = () => (\n    <>\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <img src={mainImage} className=\"img-fluid\"></img>\n      </div>\n    </div>\n    <header class=\"masthead\">\n        <div class=\"container d-flex h-100 align-items-center\">\n            <div class=\"mx-auto text-center\">\n                <h1 class=\"mx-auto my-0 text-uppercase\">Grayscale</h1>\n                <h2 class=\"text-dark-50 mx-auto mt-2 mb-5\">A free, responsive, one page Bootstrap theme created by Start\n                Bootstrap.</h2>\n                <a href=\"#about\" class=\"btn btn-primary js-scroll-trigger\">Get Started</a>\n            </div>\n        </div>\n    </header>\n    </>\n);\n\nexport default ImageandWelcome;","import React, {component, Component} from 'react';\nimport FeaturedCities from '../components/FeaturedCities';\nimport ImageandWelcome from '../components/ImageandWelcome';\n\nclass Home extends Component {\n    render () {\n         /*Array*/\n        const citiesDummy = [\n            {id: 72, name: \"Jakarta\", country_name: \"Indonesia\"},\n            {id: 11052, name: \"Bandung\", country_name: \"Indonesia\"},\n            {id: 170, name: \"Bali\", country_name: \"Indonesia\"}\n        ];\n        return(\n            <>\n                <ImageandWelcome />\n                \n                    <div className=\"container-fluid my-3\">\n                    <FeaturedCities bayiasam={citiesDummy} />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nconst Footer = () => (\n    <footer class=\"bg-dark small text-center text-white-50 py-3\">\n        <div class=\"container\">\n        Copyright &copy; 2019\n        </div>\n    </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Footer from './components/Footer';\n\n\nclass App extends Component {\n  render() {\n   \n    \n      return (\n        <>\n        <Navbar />\n        <Home />\n    \n        <Footer />\n        </>\n      );\n    }\n  }\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg-masthead.d3b4a514.jpg\";"],"sourceRoot":""}